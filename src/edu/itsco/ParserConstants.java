/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */
package edu.itsco;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int start = 5;
  /** RegularExpression Id. */
  int finish = 6;
  /** RegularExpression Id. */
  int ent = 7;
  /** RegularExpression Id. */
  int cad = 8;
  /** RegularExpression Id. */
  int flo = 9;
  /** RegularExpression Id. */
  int var = 10;
  /** RegularExpression Id. */
  int input = 11;
  /** RegularExpression Id. */
  int output = 12;
  /** RegularExpression Id. */
  int yes = 13;
  /** RegularExpression Id. */
  int ifno = 14;
  /** RegularExpression Id. */
  int so = 15;
  /** RegularExpression Id. */
  int select = 16;
  /** RegularExpression Id. */
  int option = 17;
  /** RegularExpression Id. */
  int defect = 18;
  /** RegularExpression Id. */
  int breakup = 19;
  /** RegularExpression Id. */
  int from = 20;
  /** RegularExpression Id. */
  int to = 21;
  /** RegularExpression Id. */
  int next = 22;
  /** RegularExpression Id. */
  int perform = 23;
  /** RegularExpression Id. */
  int aslongas = 24;
  /** RegularExpression Id. */
  int sum = 25;
  /** RegularExpression Id. */
  int res = 26;
  /** RegularExpression Id. */
  int mul = 27;
  /** RegularExpression Id. */
  int div = 28;
  /** RegularExpression Id. */
  int mod = 29;
  /** RegularExpression Id. */
  int pot = 30;
  /** RegularExpression Id. */
  int may = 31;
  /** RegularExpression Id. */
  int men = 32;
  /** RegularExpression Id. */
  int igu = 33;
  /** RegularExpression Id. */
  int and = 34;
  /** RegularExpression Id. */
  int or = 35;
  /** RegularExpression Id. */
  int not = 36;
  /** RegularExpression Id. */
  int pa = 37;
  /** RegularExpression Id. */
  int pc = 38;
  /** RegularExpression Id. */
  int ps = 39;
  /** RegularExpression Id. */
  int lyrics = 40;
  /** RegularExpression Id. */
  int number = 41;
  /** RegularExpression Id. */
  int id = 42;
  /** RegularExpression Id. */
  int vent = 43;
  /** RegularExpression Id. */
  int vflo = 44;
  /** RegularExpression Id. */
  int vcad = 45;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"start\"",
    "\"finish\"",
    "\"ent\"",
    "\"cad\"",
    "\"flo\"",
    "\"var\"",
    "\"input\"",
    "\"output\"",
    "\"yes\"",
    "\"ifno\"",
    "\"so\"",
    "\"select\"",
    "\"option\"",
    "\"defect\"",
    "\"breakup\"",
    "\"from\"",
    "\"to\"",
    "\"next\"",
    "\"perform\"",
    "\"aslongas\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"^\"",
    "\">\"",
    "\"<\"",
    "\"=\"",
    "\"&&\"",
    "\"||\"",
    "\"!\"",
    "\"(\"",
    "\")\"",
    "\":\"",
    "<lyrics>",
    "<number>",
    "<id>",
    "<vent>",
    "<vflo>",
    "<vcad>",
  };

}
